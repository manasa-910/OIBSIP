/*Name: Jammalamadaka Manasa
 * Task-3: Digital Library Management
 */
import java.util.*;

class Book {
    private String bookId;
    private String title;
    private String author;
    private boolean isAvailable;

    public Book(String bookId, String title, String author) {
        this.bookId = bookId;
        this.title = title;
        this.author = author;
        this.isAvailable = true;
    }

    public String getBookId() {
        return bookId;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void setAvailable(boolean available) {
        isAvailable = available;
    }
}

class Library {
    private Map<String, Book> bookCatalog;
    private List<String> members;

    public Library() {
        bookCatalog = new HashMap<>();
        members = new ArrayList<>();
    }

    public void addBook(Book book) {
        bookCatalog.put(book.getBookId(), book);
    }

    public void removeBook(String bookId) {
        bookCatalog.remove(bookId);
    }
    
    public Book getBookById(String bookId) {
        return bookCatalog.get(bookId);
    }

    public void displayBooks() {
        for (Book book : bookCatalog.values()) {
            System.out.println("Book ID: " + book.getBookId());
            System.out.println("Title: " + book.getTitle());
            System.out.println("Author: " + book.getAuthor());
            System.out.println("Available: " + (book.isAvailable() ? "Yes" : "No"));
            System.out.println("---------------------------");
        }
    }

    public void addMember(String member) {
        members.add(member);
    }

    public void removeMember(String member) {
        members.remove(member);
    }

    public void displayMembers() {
        System.out.println("Library Members:");
        for (String member : members) {
            System.out.println(member);
        }
    }
}

class Admin {
    public static void main(String[] args) {
        Library library = new Library();
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\nAdmin Menu:");
            System.out.println("1. Add Book");
            System.out.println("2. Remove Book");
            System.out.println("3. Display Books");
            System.out.println("4. Add Member");
            System.out.println("5. Remove Member");
            System.out.println("6. Display Members");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");

            int choice = sc.nextInt();
            sc.nextLine();  // Consume the newline

            switch (choice) {
                case 1:
                    addBook(library, sc);
                    break;
                case 2:
                    removeBook(library, sc);
                    break;
                case 3:
                    library.displayBooks();
                    break;
                case 4:
                    addMember(library, sc);
                    break;
                case 5:
                    removeMember(library, sc);
                    break;
                case 6:
                    library.displayMembers();
                    break;
                case 7:
                    System.out.println("Exiting Admin module...");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void addBook(Library library, Scanner sc) {
        System.out.print("Enter Book ID: ");
        String bookId = sc.nextLine();
        System.out.print("Enter Title: ");
        String title = sc.nextLine();
        System.out.print("Enter Author: ");
        String author = sc.nextLine();

        Book newBook = new Book(bookId, title, author);
        library.addBook(newBook);
        System.out.println("Book added successfully.");
    }

    private static void removeBook(Library library, Scanner sc) {
        System.out.print("Enter Book ID to remove: ");
        String bookId = sc.nextLine();
        library.removeBook(bookId);
        System.out.println("Book removed successfully.");
    }

    private static void addMember(Library library, Scanner sc) {
        System.out.print("Enter Member Name: ");
        String member = sc.nextLine();
        library.addMember(member);
        System.out.println("Member added successfully.");
    }

    private static void removeMember(Library library, Scanner sc) {
        System.out.print("Enter Member Name to remove: ");
        String member = sc.nextLine();
        library.removeMember(member);
        System.out.println("Member removed successfully.");
    }
}

class User {
    public static void main(String[] args) {
        Library library = new Library();
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\nUser Menu:");
            System.out.println("1. View Books");
            System.out.println("2. Search Book");
            System.out.println("3. Issue Book");
            System.out.println("4. Return Book");
            System.out.println("5. Contact Library");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");

            int choice = sc.nextInt();
            sc.nextLine();  // Consume the newline

            switch (choice) {
                case 1:
                    library.displayBooks();
                    break;
                case 2:
                    searchBook(library, sc);
                    break;
                case 3:
                    issueBook(library, sc);
                    break;
                case 4:
                    returnBook(library, sc);
                    break;
                case 5:
                    contactLibrary();
                    break;
                case 6:
                    System.out.println("Exiting User module...");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void searchBook(Library library, Scanner sc) {
        System.out.print("Enter Book ID to search: ");
        String bookId = sc.nextLine();
        Book book = library.getBookById(bookId);

        if (book != null) {
            System.out.println("Book found:");
            System.out.println("Title: " + book.getTitle());
            System.out.println("Author: " + book.getAuthor());
            System.out.println("Available: " + (book.isAvailable() ? "Yes" : "No"));
        } else {
            System.out.println("Book not found.");
        }
    }

    private static void issueBook(Library library, Scanner sc) {
        System.out.print("Enter Book ID to issue: ");
        String bookId = sc.nextLine();
        Book book = library.getBookById(bookId);

        if (book != null && book.isAvailable()) {
            book.setAvailable(false);
            System.out.println("Book issued successfully.");
        } else {
            System.out.println("Book not available for issue.");
        }
    }

    private static void returnBook(Library library, Scanner sc) {
        System.out.print("Enter Book ID to return: ");
        String bookId = sc.nextLine();
        Book book = library.getBookById(bookId);

        if (book != null && !book.isAvailable()) {
            book.setAvailable(true);
            System.out.println("Book returned successfully.");
        } else {
            System.out.println("Invalid Book ID or book is already available.");
        }
    }

    private static void contactLibrary() {
        System.out.println("Contact the library at library@example.com for assistance.");
    }
}
